// Code generated by protoc-gen-go. DO NOT EDIT.
// source: jsm.proto

package coolbeans_api_v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ReservationStatus int32

const (
	// Unknown ~~> UnknownRS (yuck!!)
	// Note that enum values use C++ scoping rules, meaning
	// that enum values are siblings of their type, not children of it.
	// Therefore, "Unknown" must be unique within "coolbeans.api.v1",
	// not just within "ResultCode"
	ReservationStatus_UnknownRS    ReservationStatus = 0
	ReservationStatus_Queued       ReservationStatus = 1
	ReservationStatus_DeadlineSoon ReservationStatus = 2
	ReservationStatus_Matched      ReservationStatus = 3
	ReservationStatus_Timeout      ReservationStatus = 4
	ReservationStatus_Error        ReservationStatus = 5
)

var ReservationStatus_name = map[int32]string{
	0: "UnknownRS",
	1: "Queued",
	2: "DeadlineSoon",
	3: "Matched",
	4: "Timeout",
	5: "Error",
}

var ReservationStatus_value = map[string]int32{
	"UnknownRS":    0,
	"Queued":       1,
	"DeadlineSoon": 2,
	"Matched":      3,
	"Timeout":      4,
	"Error":        5,
}

func (x ReservationStatus) String() string {
	return proto.EnumName(ReservationStatus_name, int32(x))
}

func (ReservationStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{0}
}

type OpType int32

const (
	OpType_UNKNOWN OpType = 0
	OpType_PUT     OpType = 1
	OpType_RESERVE OpType = 2
	OpType_TICK    OpType = 3
	OpType_DELETE  OpType = 4
	OpType_RELEASE OpType = 5
)

var OpType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PUT",
	2: "RESERVE",
	3: "TICK",
	4: "DELETE",
	5: "RELEASE",
}

var OpType_value = map[string]int32{
	"UNKNOWN": 0,
	"PUT":     1,
	"RESERVE": 2,
	"TICK":    3,
	"DELETE":  4,
	"RELEASE": 5,
}

func (x OpType) String() string {
	return proto.EnumName(OpType_name, int32(x))
}

func (OpType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{1}
}

// C & P from GRPC error codes
// https://github.com/grpc/grpc-go/blob/master/codes/codes.go
type ResultCode int32

const (
	// OK is returned on success.
	ResultCode_OK ResultCode = 0
	// Canceled indicates the operation was canceled (typically by the caller).
	ResultCode_Canceled ResultCode = 1
	// Unknown error. An example of where this error may be returned is
	// if a Status value received from another address space belongs to
	// an error-space that is not known in this address space. Also
	// errors raised by APIs that do not return enough error information
	// may be converted to this error.
	ResultCode_Unknown ResultCode = 2
	// InvalidArgument indicates client specified an invalid argument.
	// Note that this differs from FailedPrecondition. It indicates arguments
	// that are problematic regardless of the state of the system
	// (e.g., a malformed file name).
	ResultCode_InvalidArgument ResultCode = 3
	// DeadlineExceeded means operation expired before completion.
	// For operations that change the state of the system, this error may be
	// returned even if the operation has completed successfully. For
	// example, a successful response from a server could have been delayed
	// long enough for the deadline to expire.
	ResultCode_DeadlineExceeded ResultCode = 4
	// NotFound means some requested entity (e.g., file or directory) was
	// not found.
	ResultCode_NotFound ResultCode = 5
	// AlreadyExists means an attempt to create an entity failed because one
	// already exists.
	ResultCode_AlreadyExists ResultCode = 6
	// PermissionDenied indicates the caller does not have permission to
	// execute the specified operation. It must not be used for rejections
	// caused by exhausting some resource (use ResourceExhausted
	// instead for those errors). It must not be
	// used if the caller cannot be identified (use Unauthenticated
	// instead for those errors).
	ResultCode_PermissionDenied ResultCode = 7
	// ResourceExhausted indicates some resource has been exhausted, perhaps
	// a per-user quota, or perhaps the entire file system is out of space.
	ResultCode_ResourceExhausted ResultCode = 8
	// FailedPrecondition indicates operation was rejected because the
	// system is not in a state required for the operation's execution.
	// For example, directory to be deleted may be non-empty, an rmdir
	// operation is applied to a non-directory, etc.
	//
	// A litmus test that may help a service implementor in deciding
	// between FailedPrecondition, Aborted, and Unavailable:
	//  (a) Use Unavailable if the client can retry just the failing call.
	//  (b) Use Aborted if the client should retry at a higher-level
	//      (e.g., restarting a read-modify-write sequence).
	//  (c) Use FailedPrecondition if the client should not retry until
	//      the system state has been explicitly fixed. E.g., if an "rmdir"
	//      fails because the directory is non-empty, FailedPrecondition
	//      should be returned since the client should not retry unless
	//      they have first fixed up the directory by deleting files from it.
	//  (d) Use FailedPrecondition if the client performs conditional
	//      REST Get/Update/Delete on a resource and the resource on the
	//      server does not match the condition. E.g., conflicting
	//      read-modify-write on the same resource.
	ResultCode_FailedPrecondition ResultCode = 9
	// Aborted indicates the operation was aborted, typically due to a
	// concurrency issue like sequencer check failures, transaction aborts,
	// etc.
	//
	// See litmus test above for deciding between FailedPrecondition,
	// Aborted, and Unavailable.
	ResultCode_Aborted ResultCode = 10
	// OutOfRange means operation was attempted past the valid range.
	// E.g., seeking or reading past end of file.
	//
	// Unlike InvalidArgument, this error indicates a problem that may
	// be fixed if the system state changes. For example, a 32-bit file
	// system will generate InvalidArgument if asked to read at an
	// offset that is not in the range [0,2^32-1], but it will generate
	// OutOfRange if asked to read from an offset past the current
	// file size.
	//
	// There is a fair bit of overlap between FailedPrecondition and
	// OutOfRange. We recommend using OutOfRange (the more specific
	// error) when it applies so that callers who are iterating through
	// a space can easily look for an OutOfRange error to detect when
	// they are done.
	ResultCode_OutOfRange ResultCode = 11
	// Unimplemented indicates operation is not implemented or not
	// supported/enabled in this service.
	ResultCode_Unimplemented ResultCode = 12
	// Internal errors. Means some invariants expected by underlying
	// system has been broken. If you see one of these errors,
	// something is very broken.
	ResultCode_Internal ResultCode = 13
	// Unavailable indicates the service is currently unavailable.
	// This is a most likely a transient condition and may be corrected
	// by retrying with a backoff. Note that it is not always safe to retry
	// non-idempotent operations.
	//
	// See litmus test above for deciding between FailedPrecondition,
	// Aborted, and Unavailable.
	ResultCode_Unavailable ResultCode = 14
	// DataLoss indicates unrecoverable data loss or corruption.
	ResultCode_DataLoss ResultCode = 15
	// Unauthenticated indicates the request does not have valid
	// authentication credentials for the operation.
	ResultCode_Unauthenticated ResultCode = 16
)

var ResultCode_name = map[int32]string{
	0:  "OK",
	1:  "Canceled",
	2:  "Unknown",
	3:  "InvalidArgument",
	4:  "DeadlineExceeded",
	5:  "NotFound",
	6:  "AlreadyExists",
	7:  "PermissionDenied",
	8:  "ResourceExhausted",
	9:  "FailedPrecondition",
	10: "Aborted",
	11: "OutOfRange",
	12: "Unimplemented",
	13: "Internal",
	14: "Unavailable",
	15: "DataLoss",
	16: "Unauthenticated",
}

var ResultCode_value = map[string]int32{
	"OK":                 0,
	"Canceled":           1,
	"Unknown":            2,
	"InvalidArgument":    3,
	"DeadlineExceeded":   4,
	"NotFound":           5,
	"AlreadyExists":      6,
	"PermissionDenied":   7,
	"ResourceExhausted":  8,
	"FailedPrecondition": 9,
	"Aborted":            10,
	"OutOfRange":         11,
	"Unimplemented":      12,
	"Internal":           13,
	"Unavailable":        14,
	"DataLoss":           15,
	"Unauthenticated":    16,
}

func (x ResultCode) String() string {
	return proto.EnumName(ResultCode_name, int32(x))
}

func (ResultCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{2}
}

type PutRequest struct {
	// Refer Job.priority
	Priority uint32 `protobuf:"varint,1,opt,name=priority,proto3" json:"priority,omitempty"`
	// Refer Job.delay
	Delay int64 `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	// Refer Job.ttr
	Ttr int32 `protobuf:"varint,3,opt,name=ttr,proto3" json:"ttr,omitempty"`
	// Refer Job.tube_na,e
	TubeName string `protobuf:"bytes,4,opt,name=tube_name,json=tubeName,proto3" json:"tube_name,omitempty"`
	// Refer Job.body_size
	BodySize int32 `protobuf:"varint,5,opt,name=body_size,json=bodySize,proto3" json:"body_size,omitempty"`
	// Refer Job.body
	Body                 []byte   `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRequest) Reset()         { *m = PutRequest{} }
func (m *PutRequest) String() string { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()    {}
func (*PutRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{0}
}

func (m *PutRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRequest.Unmarshal(m, b)
}
func (m *PutRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRequest.Marshal(b, m, deterministic)
}
func (m *PutRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRequest.Merge(m, src)
}
func (m *PutRequest) XXX_Size() int {
	return xxx_messageInfo_PutRequest.Size(m)
}
func (m *PutRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRequest proto.InternalMessageInfo

func (m *PutRequest) GetPriority() uint32 {
	if m != nil {
		return m.Priority
	}
	return 0
}

func (m *PutRequest) GetDelay() int64 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *PutRequest) GetTtr() int32 {
	if m != nil {
		return m.Ttr
	}
	return 0
}

func (m *PutRequest) GetTubeName() string {
	if m != nil {
		return m.TubeName
	}
	return ""
}

func (m *PutRequest) GetBodySize() int32 {
	if m != nil {
		return m.BodySize
	}
	return 0
}

func (m *PutRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type PutResponse struct {
	// The job identifier of the new job created
	JobId                int64    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutResponse) Reset()         { *m = PutResponse{} }
func (m *PutResponse) String() string { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()    {}
func (*PutResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{1}
}

func (m *PutResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutResponse.Unmarshal(m, b)
}
func (m *PutResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutResponse.Marshal(b, m, deterministic)
}
func (m *PutResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutResponse.Merge(m, src)
}
func (m *PutResponse) XXX_Size() int {
	return xxx_messageInfo_PutResponse.Size(m)
}
func (m *PutResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutResponse proto.InternalMessageInfo

func (m *PutResponse) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

type DeleteRequest struct {
	// The job identifier of the job to be deleted
	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// the proxy identifier forwarding the client's request
	ProxyId string `protobuf:"bytes,2,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	// the client identifier of the client (deleting this job)
	ClientId             string   `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{2}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *DeleteRequest) GetProxyId() string {
	if m != nil {
		return m.ProxyId
	}
	return ""
}

func (m *DeleteRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

type ReserveRequest struct {
	// client id of the reservation
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// request id identify this reservation
	RequestId string `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// reservation timeout in seconds
	TimeoutSecs int32 `protobuf:"varint,3,opt,name=timeout_secs,json=timeoutSecs,proto3" json:"timeout_secs,omitempty"`
	// array of tubes to watch
	WatchedTubes []string `protobuf:"bytes,4,rep,name=watched_tubes,json=watchedTubes,proto3" json:"watched_tubes,omitempty"`
	// the proxy identifier forwarding the client's request
	ProxyId              string   `protobuf:"bytes,5,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveRequest) Reset()         { *m = ReserveRequest{} }
func (m *ReserveRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveRequest) ProtoMessage()    {}
func (*ReserveRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{3}
}

func (m *ReserveRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveRequest.Unmarshal(m, b)
}
func (m *ReserveRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveRequest.Marshal(b, m, deterministic)
}
func (m *ReserveRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveRequest.Merge(m, src)
}
func (m *ReserveRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveRequest.Size(m)
}
func (m *ReserveRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveRequest proto.InternalMessageInfo

func (m *ReserveRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ReserveRequest) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *ReserveRequest) GetTimeoutSecs() int32 {
	if m != nil {
		return m.TimeoutSecs
	}
	return 0
}

func (m *ReserveRequest) GetWatchedTubes() []string {
	if m != nil {
		return m.WatchedTubes
	}
	return nil
}

func (m *ReserveRequest) GetProxyId() string {
	if m != nil {
		return m.ProxyId
	}
	return ""
}

type ReserveResponse struct {
	// Reservation object encapsulated in this response
	Reservation          *Reservation `protobuf:"bytes,1,opt,name=reservation,proto3" json:"reservation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReserveResponse) Reset()         { *m = ReserveResponse{} }
func (m *ReserveResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveResponse) ProtoMessage()    {}
func (*ReserveResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{4}
}

func (m *ReserveResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveResponse.Unmarshal(m, b)
}
func (m *ReserveResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveResponse.Marshal(b, m, deterministic)
}
func (m *ReserveResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveResponse.Merge(m, src)
}
func (m *ReserveResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveResponse.Size(m)
}
func (m *ReserveResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveResponse proto.InternalMessageInfo

func (m *ReserveResponse) GetReservation() *Reservation {
	if m != nil {
		return m.Reservation
	}
	return nil
}

type ReserveUpdateRequest struct {
	// the proxy identifier requesting reservation update
	ProxyId              string   `protobuf:"bytes,1,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReserveUpdateRequest) Reset()         { *m = ReserveUpdateRequest{} }
func (m *ReserveUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ReserveUpdateRequest) ProtoMessage()    {}
func (*ReserveUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{5}
}

func (m *ReserveUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveUpdateRequest.Unmarshal(m, b)
}
func (m *ReserveUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveUpdateRequest.Marshal(b, m, deterministic)
}
func (m *ReserveUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveUpdateRequest.Merge(m, src)
}
func (m *ReserveUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_ReserveUpdateRequest.Size(m)
}
func (m *ReserveUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveUpdateRequest proto.InternalMessageInfo

func (m *ReserveUpdateRequest) GetProxyId() string {
	if m != nil {
		return m.ProxyId
	}
	return ""
}

type ReserveUpdateResponse struct {
	// Reservations  encapsulated in this response
	Reservation          *Reservation `protobuf:"bytes,1,opt,name=reservation,proto3" json:"reservation,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReserveUpdateResponse) Reset()         { *m = ReserveUpdateResponse{} }
func (m *ReserveUpdateResponse) String() string { return proto.CompactTextString(m) }
func (*ReserveUpdateResponse) ProtoMessage()    {}
func (*ReserveUpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{6}
}

func (m *ReserveUpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReserveUpdateResponse.Unmarshal(m, b)
}
func (m *ReserveUpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReserveUpdateResponse.Marshal(b, m, deterministic)
}
func (m *ReserveUpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReserveUpdateResponse.Merge(m, src)
}
func (m *ReserveUpdateResponse) XXX_Size() int {
	return xxx_messageInfo_ReserveUpdateResponse.Size(m)
}
func (m *ReserveUpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReserveUpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReserveUpdateResponse proto.InternalMessageInfo

func (m *ReserveUpdateResponse) GetReservation() *Reservation {
	if m != nil {
		return m.Reservation
	}
	return nil
}

type TickResponse struct {
	// Reservations grouped by proxy id
	ProxyReservations    map[string]*Reservations `protobuf:"bytes,3,rep,name=proxy_reservations,json=proxyReservations,proto3" json:"proxy_reservations,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TickResponse) Reset()         { *m = TickResponse{} }
func (m *TickResponse) String() string { return proto.CompactTextString(m) }
func (*TickResponse) ProtoMessage()    {}
func (*TickResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{7}
}

func (m *TickResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TickResponse.Unmarshal(m, b)
}
func (m *TickResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TickResponse.Marshal(b, m, deterministic)
}
func (m *TickResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TickResponse.Merge(m, src)
}
func (m *TickResponse) XXX_Size() int {
	return xxx_messageInfo_TickResponse.Size(m)
}
func (m *TickResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TickResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TickResponse proto.InternalMessageInfo

func (m *TickResponse) GetProxyReservations() map[string]*Reservations {
	if m != nil {
		return m.ProxyReservations
	}
	return nil
}

type Reservations struct {
	// Reservation object encapsulated in this response
	Entries              []*Reservation `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Reservations) Reset()         { *m = Reservations{} }
func (m *Reservations) String() string { return proto.CompactTextString(m) }
func (*Reservations) ProtoMessage()    {}
func (*Reservations) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{8}
}

func (m *Reservations) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reservations.Unmarshal(m, b)
}
func (m *Reservations) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reservations.Marshal(b, m, deterministic)
}
func (m *Reservations) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reservations.Merge(m, src)
}
func (m *Reservations) XXX_Size() int {
	return xxx_messageInfo_Reservations.Size(m)
}
func (m *Reservations) XXX_DiscardUnknown() {
	xxx_messageInfo_Reservations.DiscardUnknown(m)
}

var xxx_messageInfo_Reservations proto.InternalMessageInfo

func (m *Reservations) GetEntries() []*Reservation {
	if m != nil {
		return m.Entries
	}
	return nil
}

type Reservation struct {
	// request_id associated with this reservation
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// client id assinged to this reservation
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// Result of this reservation
	Status ReservationStatus `protobuf:"varint,3,opt,name=Status,proto3,enum=coolbeans.api.v1.ReservationStatus" json:"Status,omitempty"`
	// job id (assigned) if Status is matched
	JobId int64 `protobuf:"varint,4,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// job body size (assigned) if Status is matched
	BodySize int32 `protobuf:"varint,5,opt,name=body_size,json=bodySize,proto3" json:"body_size,omitempty"`
	// job body  (assigned) if Status is matched
	Body []byte `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"`
	// error message (assigned) if Status is error
	ErrorMsg string `protobuf:"bytes,7,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`
	// proxy_id is the id of the proxy server that
	// forwarded this reservation request
	ProxyId              string   `protobuf:"bytes,8,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reservation) Reset()         { *m = Reservation{} }
func (m *Reservation) String() string { return proto.CompactTextString(m) }
func (*Reservation) ProtoMessage()    {}
func (*Reservation) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{9}
}

func (m *Reservation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reservation.Unmarshal(m, b)
}
func (m *Reservation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reservation.Marshal(b, m, deterministic)
}
func (m *Reservation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reservation.Merge(m, src)
}
func (m *Reservation) XXX_Size() int {
	return xxx_messageInfo_Reservation.Size(m)
}
func (m *Reservation) XXX_DiscardUnknown() {
	xxx_messageInfo_Reservation.DiscardUnknown(m)
}

var xxx_messageInfo_Reservation proto.InternalMessageInfo

func (m *Reservation) GetRequestId() string {
	if m != nil {
		return m.RequestId
	}
	return ""
}

func (m *Reservation) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *Reservation) GetStatus() ReservationStatus {
	if m != nil {
		return m.Status
	}
	return ReservationStatus_UnknownRS
}

func (m *Reservation) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *Reservation) GetBodySize() int32 {
	if m != nil {
		return m.BodySize
	}
	return 0
}

func (m *Reservation) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Reservation) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

func (m *Reservation) GetProxyId() string {
	if m != nil {
		return m.ProxyId
	}
	return ""
}

type ReleaseRequest struct {
	// The job identifier of the job to be released
	JobId int64 `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	// The identifier of the client asking for the release
	ClientId string `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// proxy_id is the id of the proxy server that
	// forwarded this  request
	ProxyId string `protobuf:"bytes,3,opt,name=proxy_id,json=proxyId,proto3" json:"proxy_id,omitempty"`
	// A delay if set to a value > 0 marks the job as delayed
	Delay                int32    `protobuf:"varint,4,opt,name=delay,proto3" json:"delay,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReleaseRequest) Reset()         { *m = ReleaseRequest{} }
func (m *ReleaseRequest) String() string { return proto.CompactTextString(m) }
func (*ReleaseRequest) ProtoMessage()    {}
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{10}
}

func (m *ReleaseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReleaseRequest.Unmarshal(m, b)
}
func (m *ReleaseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReleaseRequest.Marshal(b, m, deterministic)
}
func (m *ReleaseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReleaseRequest.Merge(m, src)
}
func (m *ReleaseRequest) XXX_Size() int {
	return xxx_messageInfo_ReleaseRequest.Size(m)
}
func (m *ReleaseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReleaseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReleaseRequest proto.InternalMessageInfo

func (m *ReleaseRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

func (m *ReleaseRequest) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ReleaseRequest) GetProxyId() string {
	if m != nil {
		return m.ProxyId
	}
	return ""
}

func (m *ReleaseRequest) GetDelay() int32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

type TouchRequest struct {
	// The job identifier of the job to be touched
	JobId                int64    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TouchRequest) Reset()         { *m = TouchRequest{} }
func (m *TouchRequest) String() string { return proto.CompactTextString(m) }
func (*TouchRequest) ProtoMessage()    {}
func (*TouchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{11}
}

func (m *TouchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TouchRequest.Unmarshal(m, b)
}
func (m *TouchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TouchRequest.Marshal(b, m, deterministic)
}
func (m *TouchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TouchRequest.Merge(m, src)
}
func (m *TouchRequest) XXX_Size() int {
	return xxx_messageInfo_TouchRequest.Size(m)
}
func (m *TouchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TouchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TouchRequest proto.InternalMessageInfo

func (m *TouchRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

type BuryRequest struct {
	// The job identifier of the job to be buried
	JobId                int64    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuryRequest) Reset()         { *m = BuryRequest{} }
func (m *BuryRequest) String() string { return proto.CompactTextString(m) }
func (*BuryRequest) ProtoMessage()    {}
func (*BuryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{12}
}

func (m *BuryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuryRequest.Unmarshal(m, b)
}
func (m *BuryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuryRequest.Marshal(b, m, deterministic)
}
func (m *BuryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuryRequest.Merge(m, src)
}
func (m *BuryRequest) XXX_Size() int {
	return xxx_messageInfo_BuryRequest.Size(m)
}
func (m *BuryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuryRequest proto.InternalMessageInfo

func (m *BuryRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

type KickRequest struct {
	// The job identifier of the job to be Kicked
	JobId                int64    `protobuf:"varint,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *KickRequest) Reset()         { *m = KickRequest{} }
func (m *KickRequest) String() string { return proto.CompactTextString(m) }
func (*KickRequest) ProtoMessage()    {}
func (*KickRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{13}
}

func (m *KickRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_KickRequest.Unmarshal(m, b)
}
func (m *KickRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_KickRequest.Marshal(b, m, deterministic)
}
func (m *KickRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_KickRequest.Merge(m, src)
}
func (m *KickRequest) XXX_Size() int {
	return xxx_messageInfo_KickRequest.Size(m)
}
func (m *KickRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_KickRequest.DiscardUnknown(m)
}

var xxx_messageInfo_KickRequest proto.InternalMessageInfo

func (m *KickRequest) GetJobId() int64 {
	if m != nil {
		return m.JobId
	}
	return 0
}

// Encapsulates a snap of the entire system
type SnapshotProto struct {
	// Array of all jobs currently in the system
	Jobs []*JobProto `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	// Arrayy of all client reservation entries in the system
	Reservations         []*ClientResvEntryProto `protobuf:"bytes,2,rep,name=reservations,proto3" json:"reservations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *SnapshotProto) Reset()         { *m = SnapshotProto{} }
func (m *SnapshotProto) String() string { return proto.CompactTextString(m) }
func (*SnapshotProto) ProtoMessage()    {}
func (*SnapshotProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{14}
}

func (m *SnapshotProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnapshotProto.Unmarshal(m, b)
}
func (m *SnapshotProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnapshotProto.Marshal(b, m, deterministic)
}
func (m *SnapshotProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnapshotProto.Merge(m, src)
}
func (m *SnapshotProto) XXX_Size() int {
	return xxx_messageInfo_SnapshotProto.Size(m)
}
func (m *SnapshotProto) XXX_DiscardUnknown() {
	xxx_messageInfo_SnapshotProto.DiscardUnknown(m)
}

var xxx_messageInfo_SnapshotProto proto.InternalMessageInfo

func (m *SnapshotProto) GetJobs() []*JobProto {
	if m != nil {
		return m.Jobs
	}
	return nil
}

func (m *SnapshotProto) GetReservations() []*ClientResvEntryProto {
	if m != nil {
		return m.Reservations
	}
	return nil
}

type ApplyOpRequest struct {
	// Indicates the type of operation
	Op OpType `protobuf:"varint,1,opt,name=op,proto3,enum=coolbeans.api.v1.OpType" json:"op,omitempty"`
	// time in seconds from epoch this request is made
	NowSecs int64 `protobuf:"varint,2,opt,name=now_secs,json=nowSecs,proto3" json:"now_secs,omitempty"`
	// The operation request body
	Body                 []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyOpRequest) Reset()         { *m = ApplyOpRequest{} }
func (m *ApplyOpRequest) String() string { return proto.CompactTextString(m) }
func (*ApplyOpRequest) ProtoMessage()    {}
func (*ApplyOpRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{15}
}

func (m *ApplyOpRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyOpRequest.Unmarshal(m, b)
}
func (m *ApplyOpRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyOpRequest.Marshal(b, m, deterministic)
}
func (m *ApplyOpRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyOpRequest.Merge(m, src)
}
func (m *ApplyOpRequest) XXX_Size() int {
	return xxx_messageInfo_ApplyOpRequest.Size(m)
}
func (m *ApplyOpRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyOpRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyOpRequest proto.InternalMessageInfo

func (m *ApplyOpRequest) GetOp() OpType {
	if m != nil {
		return m.Op
	}
	return OpType_UNKNOWN
}

func (m *ApplyOpRequest) GetNowSecs() int64 {
	if m != nil {
		return m.NowSecs
	}
	return 0
}

func (m *ApplyOpRequest) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type ApplyOpResponse struct {
	// error code
	ErrorCode ResultCode `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3,enum=coolbeans.api.v1.ResultCode" json:"error_code,omitempty"`
	// error message (typically set if error_code > 0
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// The response body
	Body                 []byte   `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplyOpResponse) Reset()         { *m = ApplyOpResponse{} }
func (m *ApplyOpResponse) String() string { return proto.CompactTextString(m) }
func (*ApplyOpResponse) ProtoMessage()    {}
func (*ApplyOpResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf6c16014e2432ed, []int{16}
}

func (m *ApplyOpResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ApplyOpResponse.Unmarshal(m, b)
}
func (m *ApplyOpResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ApplyOpResponse.Marshal(b, m, deterministic)
}
func (m *ApplyOpResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplyOpResponse.Merge(m, src)
}
func (m *ApplyOpResponse) XXX_Size() int {
	return xxx_messageInfo_ApplyOpResponse.Size(m)
}
func (m *ApplyOpResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplyOpResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ApplyOpResponse proto.InternalMessageInfo

func (m *ApplyOpResponse) GetErrorCode() ResultCode {
	if m != nil {
		return m.ErrorCode
	}
	return ResultCode_OK
}

func (m *ApplyOpResponse) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *ApplyOpResponse) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func init() {
	proto.RegisterEnum("coolbeans.api.v1.ReservationStatus", ReservationStatus_name, ReservationStatus_value)
	proto.RegisterEnum("coolbeans.api.v1.OpType", OpType_name, OpType_value)
	proto.RegisterEnum("coolbeans.api.v1.ResultCode", ResultCode_name, ResultCode_value)
	proto.RegisterType((*PutRequest)(nil), "coolbeans.api.v1.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "coolbeans.api.v1.PutResponse")
	proto.RegisterType((*DeleteRequest)(nil), "coolbeans.api.v1.DeleteRequest")
	proto.RegisterType((*ReserveRequest)(nil), "coolbeans.api.v1.ReserveRequest")
	proto.RegisterType((*ReserveResponse)(nil), "coolbeans.api.v1.ReserveResponse")
	proto.RegisterType((*ReserveUpdateRequest)(nil), "coolbeans.api.v1.ReserveUpdateRequest")
	proto.RegisterType((*ReserveUpdateResponse)(nil), "coolbeans.api.v1.ReserveUpdateResponse")
	proto.RegisterType((*TickResponse)(nil), "coolbeans.api.v1.TickResponse")
	proto.RegisterMapType((map[string]*Reservations)(nil), "coolbeans.api.v1.TickResponse.ProxyReservationsEntry")
	proto.RegisterType((*Reservations)(nil), "coolbeans.api.v1.Reservations")
	proto.RegisterType((*Reservation)(nil), "coolbeans.api.v1.Reservation")
	proto.RegisterType((*ReleaseRequest)(nil), "coolbeans.api.v1.ReleaseRequest")
	proto.RegisterType((*TouchRequest)(nil), "coolbeans.api.v1.TouchRequest")
	proto.RegisterType((*BuryRequest)(nil), "coolbeans.api.v1.BuryRequest")
	proto.RegisterType((*KickRequest)(nil), "coolbeans.api.v1.KickRequest")
	proto.RegisterType((*SnapshotProto)(nil), "coolbeans.api.v1.SnapshotProto")
	proto.RegisterType((*ApplyOpRequest)(nil), "coolbeans.api.v1.ApplyOpRequest")
	proto.RegisterType((*ApplyOpResponse)(nil), "coolbeans.api.v1.ApplyOpResponse")
}

func init() {
	proto.RegisterFile("jsm.proto", fileDescriptor_cf6c16014e2432ed)
}

var fileDescriptor_cf6c16014e2432ed = []byte{
	// 1265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdf, 0x72, 0xdb, 0x44,
	0x17, 0x8f, 0x2c, 0xff, 0x89, 0x8f, 0xed, 0x64, 0xbb, 0x5f, 0xda, 0xcf, 0x9f, 0x3f, 0x0a, 0xae,
	0x0b, 0x1d, 0x4f, 0x2f, 0x3c, 0x34, 0xc0, 0xc0, 0xd0, 0x0b, 0x48, 0x63, 0x95, 0x71, 0xd3, 0x26,
	0x46, 0xb6, 0x81, 0x2b, 0x32, 0x6b, 0xe9, 0x90, 0x28, 0x95, 0x77, 0x85, 0x76, 0x95, 0xc4, 0x7d,
	0x00, 0xb8, 0xe0, 0x1d, 0x78, 0x05, 0x66, 0x78, 0x1c, 0x1e, 0x80, 0xe7, 0x60, 0x56, 0x52, 0x1c,
	0x29, 0x76, 0x1d, 0x98, 0xe1, 0x4e, 0x7b, 0xf6, 0x77, 0xce, 0xf9, 0x9d, 0xa3, 0xdf, 0x9e, 0x5d,
	0xa8, 0x9e, 0xc9, 0x59, 0x2f, 0x08, 0x85, 0x12, 0x94, 0x38, 0x42, 0xf8, 0x53, 0x64, 0x5c, 0xf6,
	0x58, 0xe0, 0xf5, 0xce, 0x9f, 0xb4, 0xea, 0x8e, 0xef, 0x21, 0x57, 0xc9, 0x7e, 0xab, 0x7a, 0x26,
	0xa6, 0xe9, 0x67, 0x0d, 0x67, 0x81, 0x9a, 0x27, 0x8b, 0xce, 0xaf, 0x06, 0xc0, 0x30, 0x52, 0x36,
	0xfe, 0x18, 0xa1, 0x54, 0xb4, 0x05, 0x9b, 0x41, 0xe8, 0x89, 0xd0, 0x53, 0xf3, 0xa6, 0xd1, 0x36,
	0xba, 0x0d, 0x7b, 0xb1, 0xa6, 0x3b, 0x50, 0x72, 0xd1, 0x67, 0xf3, 0x66, 0xa1, 0x6d, 0x74, 0x4d,
	0x3b, 0x59, 0x50, 0x02, 0xa6, 0x52, 0x61, 0xd3, 0x6c, 0x1b, 0xdd, 0x92, 0xad, 0x3f, 0xe9, 0xff,
	0xa1, 0xaa, 0xa2, 0x29, 0x1e, 0x73, 0x36, 0xc3, 0x66, 0xb1, 0x6d, 0x74, 0xab, 0xf6, 0xa6, 0x36,
	0x1c, 0xb2, 0x19, 0xea, 0xcd, 0xa9, 0x70, 0xe7, 0xc7, 0xd2, 0x7b, 0x83, 0xcd, 0x52, 0xec, 0xb4,
	0xa9, 0x0d, 0x23, 0xef, 0x0d, 0x52, 0x0a, 0x45, 0xfd, 0xdd, 0x2c, 0xb7, 0x8d, 0x6e, 0xdd, 0x8e,
	0xbf, 0x3b, 0xef, 0x43, 0x2d, 0xe6, 0x27, 0x03, 0xc1, 0x25, 0xd2, 0xbb, 0x50, 0x3e, 0x13, 0xd3,
	0x63, 0xcf, 0x8d, 0xe9, 0x99, 0x76, 0xe9, 0x4c, 0x4c, 0x07, 0x6e, 0xe7, 0x7b, 0x68, 0xf4, 0xd1,
	0x47, 0x85, 0x57, 0x85, 0xac, 0xc6, 0xd1, 0xff, 0xe9, 0xfa, 0xc4, 0xe5, 0x5c, 0x6f, 0x14, 0x62,
	0x6a, 0x95, 0x78, 0x3d, 0x70, 0x35, 0xb3, 0xa4, 0x63, 0x7a, 0xcf, 0x4c, 0x68, 0x27, 0x86, 0x81,
	0xdb, 0xf9, 0xcd, 0x80, 0x2d, 0x1b, 0x25, 0x86, 0xe7, 0x8b, 0x0c, 0x39, 0xbc, 0x91, 0xc7, 0xd3,
	0xfb, 0x00, 0x61, 0x82, 0xbb, 0xce, 0x54, 0x4d, 0x2d, 0x03, 0x97, 0x3e, 0x80, 0xba, 0xf2, 0x66,
	0x28, 0x22, 0x75, 0x2c, 0xd1, 0x91, 0x69, 0xf7, 0x6a, 0xa9, 0x6d, 0x84, 0x8e, 0xa4, 0x0f, 0xa1,
	0x71, 0xc1, 0x94, 0x73, 0x8a, 0xee, 0xb1, 0x6e, 0x9e, 0x6c, 0x16, 0xdb, 0x66, 0xb7, 0x6a, 0xd7,
	0x53, 0xe3, 0x58, 0xdb, 0x72, 0xe5, 0x94, 0x72, 0xe5, 0x74, 0x6c, 0xd8, 0x5e, 0x10, 0x4e, 0x7b,
	0xf7, 0x05, 0xd4, 0xc2, 0xd8, 0xc4, 0x94, 0x27, 0x78, 0xcc, 0xb9, 0xb6, 0x7b, 0xbf, 0x77, 0x53,
	0x39, 0x3d, 0xfb, 0x1a, 0x64, 0x67, 0x3d, 0x3a, 0x4f, 0x60, 0x27, 0x8d, 0x39, 0x09, 0x5c, 0x76,
	0xdd, 0xec, 0x2c, 0x0d, 0x23, 0x4f, 0xe3, 0x3b, 0xb8, 0x7b, 0xc3, 0xe5, 0xdf, 0x22, 0xf3, 0x87,
	0x01, 0xf5, 0xb1, 0xe7, 0xbc, 0x5e, 0x44, 0x74, 0x81, 0x26, 0x2c, 0x32, 0x28, 0xdd, 0x5a, 0xb3,
	0x5b, 0xdb, 0xfd, 0x64, 0x39, 0x70, 0xd6, 0xb7, 0x37, 0xd4, 0x8e, 0x99, 0x54, 0xd2, 0xe2, 0x2a,
	0x9c, 0xdb, 0x77, 0x82, 0x9b, 0xf6, 0x96, 0x0b, 0xf7, 0x56, 0x83, 0xf5, 0x49, 0x78, 0x8d, 0xf3,
	0xb4, 0x01, 0xfa, 0x93, 0x7e, 0x0c, 0xa5, 0x73, 0xe6, 0x47, 0x18, 0x0b, 0xa0, 0xb6, 0xfb, 0xee,
	0xda, 0xea, 0xa4, 0x9d, 0x80, 0x3f, 0x2f, 0x7c, 0x66, 0x74, 0xbe, 0x82, 0x7a, 0x76, 0x8b, 0x7e,
	0x0a, 0x15, 0xe4, 0x2a, 0xf4, 0x50, 0x36, 0x8d, 0xb8, 0xa0, 0x5b, 0x3a, 0x75, 0x85, 0xee, 0xfc,
	0x54, 0x80, 0x5a, 0x66, 0xe3, 0x86, 0x30, 0x8d, 0x9b, 0xc2, 0xcc, 0x89, 0xba, 0x70, 0x43, 0xd4,
	0x4f, 0xa1, 0x3c, 0x52, 0x4c, 0x45, 0x89, 0x5e, 0xb7, 0x76, 0x1f, 0xae, 0xe5, 0x90, 0x40, 0xed,
	0xd4, 0x25, 0x73, 0x20, 0x8b, 0xd9, 0x03, 0xf9, 0x4f, 0xe7, 0x81, 0x76, 0xc0, 0x30, 0x14, 0xe1,
	0xf1, 0x4c, 0x9e, 0x34, 0x2b, 0x09, 0xc3, 0xd8, 0xf0, 0x4a, 0x9e, 0xe4, 0x84, 0xb8, 0x99, 0x17,
	0x62, 0xa4, 0x0f, 0xb0, 0x8f, 0x4c, 0xde, 0x36, 0x22, 0xd6, 0xb6, 0x20, 0x9b, 0xc0, 0xcc, 0xcf,
	0x8f, 0xc5, 0x78, 0x2c, 0xc6, 0x55, 0x24, 0x8b, 0xce, 0x07, 0x50, 0x1f, 0x8b, 0xc8, 0x39, 0x5d,
	0x9f, 0x54, 0x4f, 0xb9, 0x67, 0x51, 0x38, 0xbf, 0x1d, 0x75, 0x10, 0xab, 0x76, 0x2d, 0xea, 0x17,
	0x03, 0x1a, 0x23, 0xce, 0x02, 0x79, 0x2a, 0xd4, 0x30, 0xbe, 0x1c, 0x7a, 0x50, 0x3c, 0x13, 0xd3,
	0x2b, 0xe9, 0xb4, 0x96, 0x7f, 0xdb, 0x0b, 0x31, 0x8d, 0x91, 0x76, 0x8c, 0xa3, 0x2f, 0xa0, 0x9e,
	0x3b, 0x43, 0x85, 0xd8, 0xef, 0xd1, 0xb2, 0xdf, 0x7e, 0xdc, 0x17, 0x1b, 0xe5, 0x79, 0x7c, 0x04,
	0x92, 0x18, 0x39, 0xdf, 0x8e, 0x07, 0x5b, 0x7b, 0x41, 0xe0, 0xcf, 0x8f, 0x82, 0x2b, 0xda, 0x5d,
	0x28, 0x88, 0x20, 0xa6, 0xbc, 0xb5, 0xdb, 0x5c, 0x8e, 0x79, 0x14, 0x8c, 0xe7, 0x01, 0xda, 0x05,
	0x11, 0xe8, 0x6e, 0x73, 0x71, 0x91, 0x8c, 0xc8, 0xe4, 0xd2, 0xa9, 0x70, 0x71, 0x11, 0x8f, 0xc7,
	0x2b, 0x69, 0x98, 0x99, 0xab, 0xe2, 0x67, 0x03, 0xb6, 0x17, 0xb9, 0xd2, 0xa1, 0xf0, 0x14, 0x20,
	0x91, 0x8b, 0x23, 0x5c, 0x4c, 0x93, 0xbe, 0xb3, 0x52, 0xb7, 0x91, 0xaf, 0xf6, 0x85, 0x8b, 0x76,
	0x22, 0x2f, 0xfd, 0xa9, 0x67, 0x70, 0xaa, 0x35, 0x94, 0x92, 0x9d, 0x60, 0x2a, 0x87, 0x7a, 0xa2,
	0xb7, 0xc4, 0xb6, 0x8a, 0xc9, 0x63, 0x84, 0x3b, 0x4b, 0x27, 0x81, 0x36, 0xa0, 0x3a, 0xe1, 0xaf,
	0xb9, 0xb8, 0xe0, 0xf6, 0x88, 0x6c, 0x50, 0x80, 0xf2, 0xd7, 0x11, 0x46, 0xe8, 0x12, 0x83, 0x12,
	0xa8, 0xf7, 0x91, 0xb9, 0xbe, 0xc7, 0x71, 0x24, 0x04, 0x27, 0x05, 0x5a, 0x83, 0xca, 0xab, 0x64,
	0xd2, 0x13, 0x53, 0x2f, 0xc6, 0xc9, 0xd5, 0x40, 0x8a, 0xb4, 0x0a, 0x25, 0x4b, 0xe7, 0x27, 0xa5,
	0xc7, 0x87, 0x50, 0x4e, 0xba, 0xa5, 0x11, 0x93, 0xc3, 0x83, 0xc3, 0xa3, 0x6f, 0x0f, 0xc9, 0x06,
	0xad, 0x80, 0x39, 0x9c, 0x8c, 0x89, 0xa1, 0xad, 0xb6, 0x35, 0xb2, 0xec, 0x6f, 0x2c, 0x52, 0xa0,
	0x9b, 0x50, 0x1c, 0x0f, 0xf6, 0x0f, 0x88, 0xa9, 0x33, 0xf7, 0xad, 0x97, 0xd6, 0xd8, 0x22, 0xc5,
	0x04, 0xf2, 0xd2, 0xda, 0x1b, 0x59, 0xa4, 0xf4, 0xf8, 0xf7, 0x02, 0xc0, 0x75, 0x27, 0x68, 0x19,
	0x0a, 0x47, 0x07, 0x64, 0x83, 0xd6, 0x61, 0x73, 0x9f, 0x71, 0x07, 0xfd, 0x98, 0xab, 0x4e, 0x95,
	0x94, 0x41, 0x0a, 0xf4, 0x3f, 0xb0, 0x3d, 0xe0, 0xe7, 0xcc, 0xf7, 0xdc, 0xbd, 0xf0, 0x24, 0x9a,
	0x21, 0x57, 0xc4, 0xa4, 0x3b, 0x40, 0xae, 0xaa, 0xb1, 0x2e, 0x1d, 0x44, 0x17, 0x5d, 0x52, 0xd4,
	0x51, 0x0e, 0x85, 0x7a, 0x2e, 0x22, 0xee, 0x92, 0x12, 0xbd, 0x03, 0x8d, 0x3d, 0x3f, 0x44, 0xe6,
	0xce, 0xad, 0x4b, 0x4f, 0x2a, 0x49, 0xca, 0xda, 0x6d, 0x88, 0xe1, 0xcc, 0x93, 0xd2, 0x13, 0xbc,
	0x8f, 0xdc, 0x43, 0x97, 0x54, 0xe8, 0xdd, 0xb8, 0x95, 0x22, 0x0a, 0x1d, 0xb4, 0x2e, 0x4f, 0x59,
	0x24, 0x15, 0xba, 0x64, 0x93, 0xde, 0x03, 0xfa, 0x9c, 0x79, 0x3e, 0xba, 0xc3, 0x10, 0x1d, 0xc1,
	0x5d, 0x4f, 0x37, 0x9a, 0x54, 0x35, 0xbb, 0xbd, 0xa9, 0x08, 0x35, 0x08, 0xe8, 0x16, 0xc0, 0x51,
	0xa4, 0x8e, 0x7e, 0xb0, 0x19, 0x3f, 0x41, 0x52, 0xd3, 0x49, 0x27, 0xdc, 0x9b, 0x05, 0x3e, 0x6a,
	0xa6, 0xe8, 0x92, 0xba, 0x66, 0x35, 0xe0, 0x0a, 0x43, 0xce, 0x7c, 0xd2, 0xa0, 0xdb, 0x50, 0x9b,
	0x70, 0x76, 0xce, 0x3c, 0x9f, 0x4d, 0x7d, 0x24, 0x5b, 0x7a, 0xbb, 0xcf, 0x14, 0x7b, 0x29, 0xa4,
	0x24, 0xdb, 0xba, 0xda, 0x09, 0x67, 0x91, 0x3a, 0x45, 0xae, 0x3c, 0x87, 0xe9, 0x08, 0x64, 0xf7,
	0xcf, 0x22, 0x6c, 0xbf, 0x10, 0x53, 0xfd, 0x93, 0xf1, 0x15, 0x73, 0x4e, 0x3d, 0x8e, 0xb4, 0x0f,
	0xe6, 0x30, 0x52, 0x74, 0x85, 0xd0, 0xae, 0xdf, 0x5a, 0xad, 0xfb, 0x6f, 0xd9, 0x4d, 0x94, 0xdb,
	0xd9, 0xa0, 0x7d, 0x28, 0x27, 0x8f, 0x1a, 0xfa, 0xde, 0x32, 0x34, 0xf7, 0xdc, 0x69, 0xfd, 0x77,
	0x19, 0x60, 0xe9, 0x57, 0x5e, 0x67, 0x83, 0x0e, 0xa1, 0x92, 0xde, 0xc0, 0xb4, 0xfd, 0xb6, 0x81,
	0xbd, 0x88, 0xf3, 0x60, 0x0d, 0x62, 0xc1, 0x0b, 0x61, 0x67, 0xa4, 0x42, 0x64, 0xb3, 0xdc, 0xcd,
	0x2e, 0xe9, 0xa3, 0xb7, 0x3a, 0xe7, 0x9e, 0x0b, 0x7f, 0x2b, 0xc9, 0x87, 0x06, 0x7d, 0xae, 0x89,
	0xc7, 0x13, 0x7b, 0x35, 0xf1, 0xec, 0x30, 0x5f, 0xd7, 0x80, 0x67, 0x50, 0x8a, 0x47, 0x30, 0x5d,
	0x71, 0xff, 0x66, 0x67, 0xf3, 0xba, 0x18, 0x5f, 0x42, 0x51, 0xcf, 0x67, 0xba, 0xe2, 0x9f, 0x65,
	0xe6, 0xf6, 0x2d, 0x11, 0xf4, 0xec, 0x5e, 0x15, 0x21, 0x33, 0xd3, 0xd7, 0x44, 0x98, 0x96, 0xe3,
	0x17, 0xfb, 0x47, 0x7f, 0x05, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x38, 0x4f, 0x21, 0xf6, 0x0b, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// JobStateMachineClient is the client API for JobStateMachine service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JobStateMachineClient interface {
	// Put creates a new job with the provided job parameters
	//
	// The response contains the identifier of the job created
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// Delete a job with the provided job id
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error)
	// Reserve is a request to reserve a channel for a client by this proxy
	Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveResponse, error)
	// StreamReserveUpdates is a streaming RPC from the server back to client
	//
	// Reservations are streamed as they are available for this proxy
	StreamReserveUpdates(ctx context.Context, in *ReserveUpdateRequest, opts ...grpc.CallOption) (JobStateMachine_StreamReserveUpdatesClient, error)
	// Release a reserved job back to either a Ready or a Delayed state
	Release(ctx context.Context, in *ReleaseRequest, opts ...grpc.CallOption) (*Empty, error)
	// Extend a reserved job's reservation TTL by its TTR (time-to-run)
	Touch(ctx context.Context, in *TouchRequest, opts ...grpc.CallOption) (*Empty, error)
	// Bury this job, if this job is in the reserved state
	Bury(ctx context.Context, in *BuryRequest, opts ...grpc.CallOption) (*Empty, error)
	// Kick this job, if this job is in a buried stated to ready state
	Kick(ctx context.Context, in *KickRequest, opts ...grpc.CallOption) (*Empty, error)
}

type jobStateMachineClient struct {
	cc grpc.ClientConnInterface
}

func NewJobStateMachineClient(cc grpc.ClientConnInterface) JobStateMachineClient {
	return &jobStateMachineClient{cc}
}

func (c *jobStateMachineClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Put", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobStateMachineClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobStateMachineClient) Reserve(ctx context.Context, in *ReserveRequest, opts ...grpc.CallOption) (*ReserveResponse, error) {
	out := new(ReserveResponse)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Reserve", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobStateMachineClient) StreamReserveUpdates(ctx context.Context, in *ReserveUpdateRequest, opts ...grpc.CallOption) (JobStateMachine_StreamReserveUpdatesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JobStateMachine_serviceDesc.Streams[0], "/coolbeans.api.v1.JobStateMachine/StreamReserveUpdates", opts...)
	if err != nil {
		return nil, err
	}
	x := &jobStateMachineStreamReserveUpdatesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JobStateMachine_StreamReserveUpdatesClient interface {
	Recv() (*ReserveResponse, error)
	grpc.ClientStream
}

type jobStateMachineStreamReserveUpdatesClient struct {
	grpc.ClientStream
}

func (x *jobStateMachineStreamReserveUpdatesClient) Recv() (*ReserveResponse, error) {
	m := new(ReserveResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *jobStateMachineClient) Release(ctx context.Context, in *ReleaseRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Release", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobStateMachineClient) Touch(ctx context.Context, in *TouchRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Touch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobStateMachineClient) Bury(ctx context.Context, in *BuryRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Bury", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jobStateMachineClient) Kick(ctx context.Context, in *KickRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/coolbeans.api.v1.JobStateMachine/Kick", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// JobStateMachineServer is the server API for JobStateMachine service.
type JobStateMachineServer interface {
	// Put creates a new job with the provided job parameters
	//
	// The response contains the identifier of the job created
	Put(context.Context, *PutRequest) (*PutResponse, error)
	// Delete a job with the provided job id
	Delete(context.Context, *DeleteRequest) (*Empty, error)
	// Reserve is a request to reserve a channel for a client by this proxy
	Reserve(context.Context, *ReserveRequest) (*ReserveResponse, error)
	// StreamReserveUpdates is a streaming RPC from the server back to client
	//
	// Reservations are streamed as they are available for this proxy
	StreamReserveUpdates(*ReserveUpdateRequest, JobStateMachine_StreamReserveUpdatesServer) error
	// Release a reserved job back to either a Ready or a Delayed state
	Release(context.Context, *ReleaseRequest) (*Empty, error)
	// Extend a reserved job's reservation TTL by its TTR (time-to-run)
	Touch(context.Context, *TouchRequest) (*Empty, error)
	// Bury this job, if this job is in the reserved state
	Bury(context.Context, *BuryRequest) (*Empty, error)
	// Kick this job, if this job is in a buried stated to ready state
	Kick(context.Context, *KickRequest) (*Empty, error)
}

// UnimplementedJobStateMachineServer can be embedded to have forward compatible implementations.
type UnimplementedJobStateMachineServer struct {
}

func (*UnimplementedJobStateMachineServer) Put(ctx context.Context, req *PutRequest) (*PutResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Put not implemented")
}
func (*UnimplementedJobStateMachineServer) Delete(ctx context.Context, req *DeleteRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedJobStateMachineServer) Reserve(ctx context.Context, req *ReserveRequest) (*ReserveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Reserve not implemented")
}
func (*UnimplementedJobStateMachineServer) StreamReserveUpdates(req *ReserveUpdateRequest, srv JobStateMachine_StreamReserveUpdatesServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamReserveUpdates not implemented")
}
func (*UnimplementedJobStateMachineServer) Release(ctx context.Context, req *ReleaseRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Release not implemented")
}
func (*UnimplementedJobStateMachineServer) Touch(ctx context.Context, req *TouchRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Touch not implemented")
}
func (*UnimplementedJobStateMachineServer) Bury(ctx context.Context, req *BuryRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Bury not implemented")
}
func (*UnimplementedJobStateMachineServer) Kick(ctx context.Context, req *KickRequest) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Kick not implemented")
}

func RegisterJobStateMachineServer(s *grpc.Server, srv JobStateMachineServer) {
	s.RegisterService(&_JobStateMachine_serviceDesc, srv)
}

func _JobStateMachine_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobStateMachine_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobStateMachine_Reserve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Reserve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Reserve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Reserve(ctx, req.(*ReserveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobStateMachine_StreamReserveUpdates_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ReserveUpdateRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JobStateMachineServer).StreamReserveUpdates(m, &jobStateMachineStreamReserveUpdatesServer{stream})
}

type JobStateMachine_StreamReserveUpdatesServer interface {
	Send(*ReserveResponse) error
	grpc.ServerStream
}

type jobStateMachineStreamReserveUpdatesServer struct {
	grpc.ServerStream
}

func (x *jobStateMachineStreamReserveUpdatesServer) Send(m *ReserveResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _JobStateMachine_Release_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReleaseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Release(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Release",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Release(ctx, req.(*ReleaseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobStateMachine_Touch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TouchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Touch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Touch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Touch(ctx, req.(*TouchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobStateMachine_Bury_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Bury(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Bury",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Bury(ctx, req.(*BuryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _JobStateMachine_Kick_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(KickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JobStateMachineServer).Kick(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/coolbeans.api.v1.JobStateMachine/Kick",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JobStateMachineServer).Kick(ctx, req.(*KickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _JobStateMachine_serviceDesc = grpc.ServiceDesc{
	ServiceName: "coolbeans.api.v1.JobStateMachine",
	HandlerType: (*JobStateMachineServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Put",
			Handler:    _JobStateMachine_Put_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _JobStateMachine_Delete_Handler,
		},
		{
			MethodName: "Reserve",
			Handler:    _JobStateMachine_Reserve_Handler,
		},
		{
			MethodName: "Release",
			Handler:    _JobStateMachine_Release_Handler,
		},
		{
			MethodName: "Touch",
			Handler:    _JobStateMachine_Touch_Handler,
		},
		{
			MethodName: "Bury",
			Handler:    _JobStateMachine_Bury_Handler,
		},
		{
			MethodName: "Kick",
			Handler:    _JobStateMachine_Kick_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamReserveUpdates",
			Handler:       _JobStateMachine_StreamReserveUpdates_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "jsm.proto",
}
