// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package coolbeans_api_v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ClientResvEntryProto struct {
	// identifier of the client that requested a reservation
	ClientId string `protobuf:"bytes,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// reservation deadline at (clock time)
	ResvDeadlineAt int64 `protobuf:"varint,2,opt,name=resv_deadline_at,json=resvDeadlineAt,proto3" json:"resv_deadline_at,omitempty"`
	// boolean indicating if the client is waiting for a reservation
	IsWaitingForResv bool `protobuf:"varint,3,opt,name=is_waiting_for_resv,json=isWaitingForResv,proto3" json:"is_waiting_for_resv,omitempty"`
	// clock time at which the client needs some processing
	TickAt int64 `protobuf:"varint,4,opt,name=tick_at,json=tickAt,proto3" json:"tick_at,omitempty"`
	// request id of the current reservation request
	ReqId string `protobuf:"bytes,5,opt,name=req_id,json=reqId,proto3" json:"req_id,omitempty"`
	// heap index value for this client reservation
	HeapIndex int32 `protobuf:"varint,6,opt,name=heap_index,json=heapIndex,proto3" json:"heap_index,omitempty"`
	// names of the tubes current watched for resrervations
	WatchedTube          []string `protobuf:"bytes,7,rep,name=watched_tube,json=watchedTube,proto3" json:"watched_tube,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientResvEntryProto) Reset()         { *m = ClientResvEntryProto{} }
func (m *ClientResvEntryProto) String() string { return proto.CompactTextString(m) }
func (*ClientResvEntryProto) ProtoMessage()    {}
func (*ClientResvEntryProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

func (m *ClientResvEntryProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientResvEntryProto.Unmarshal(m, b)
}
func (m *ClientResvEntryProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientResvEntryProto.Marshal(b, m, deterministic)
}
func (m *ClientResvEntryProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientResvEntryProto.Merge(m, src)
}
func (m *ClientResvEntryProto) XXX_Size() int {
	return xxx_messageInfo_ClientResvEntryProto.Size(m)
}
func (m *ClientResvEntryProto) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientResvEntryProto.DiscardUnknown(m)
}

var xxx_messageInfo_ClientResvEntryProto proto.InternalMessageInfo

func (m *ClientResvEntryProto) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *ClientResvEntryProto) GetResvDeadlineAt() int64 {
	if m != nil {
		return m.ResvDeadlineAt
	}
	return 0
}

func (m *ClientResvEntryProto) GetIsWaitingForResv() bool {
	if m != nil {
		return m.IsWaitingForResv
	}
	return false
}

func (m *ClientResvEntryProto) GetTickAt() int64 {
	if m != nil {
		return m.TickAt
	}
	return 0
}

func (m *ClientResvEntryProto) GetReqId() string {
	if m != nil {
		return m.ReqId
	}
	return ""
}

func (m *ClientResvEntryProto) GetHeapIndex() int32 {
	if m != nil {
		return m.HeapIndex
	}
	return 0
}

func (m *ClientResvEntryProto) GetWatchedTube() []string {
	if m != nil {
		return m.WatchedTube
	}
	return nil
}

func init() {
	proto.RegisterType((*ClientResvEntryProto)(nil), "coolbeans.api.v1.ClientResvEntryProto")
}

func init() {
	proto.RegisterFile("client.proto", fileDescriptor_014de31d7ac8c57c)
}

var fileDescriptor_014de31d7ac8c57c = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x2c, 0x90, 0x5d, 0x4b, 0xc3, 0x30,
	0x14, 0x86, 0x89, 0xb5, 0xdd, 0x1a, 0x87, 0x94, 0xa8, 0x58, 0x10, 0xa1, 0x7a, 0x95, 0x1b, 0x0b,
	0xe2, 0x2f, 0x18, 0x7e, 0x40, 0xef, 0x24, 0x08, 0x5e, 0x86, 0xb4, 0x39, 0xba, 0x60, 0x49, 0xba,
	0xf4, 0xac, 0xd3, 0x3f, 0x2f, 0x23, 0xe9, 0x2e, 0xf3, 0xe4, 0x39, 0xef, 0x79, 0x39, 0x74, 0xd5,
	0xf5, 0x06, 0x2c, 0xd6, 0x83, 0x77, 0xe8, 0x58, 0xd1, 0x39, 0xd7, 0xb7, 0xa0, 0xec, 0x58, 0xab,
	0xc1, 0xd4, 0xd3, 0xe3, 0xfd, 0x3f, 0xa1, 0x97, 0xcf, 0x51, 0x11, 0x30, 0x4e, 0xaf, 0x16, 0xfd,
	0xdf, 0x7b, 0x54, 0x6f, 0x68, 0x3e, 0x8f, 0x4a, 0xa3, 0x4b, 0x52, 0x11, 0x9e, 0x8b, 0xe5, 0x0c,
	0x1a, 0xcd, 0x38, 0x2d, 0x3c, 0x8c, 0x93, 0xd4, 0xa0, 0x74, 0x6f, 0x2c, 0x48, 0x85, 0xe5, 0x49,
	0x45, 0x78, 0x22, 0xce, 0x03, 0x7f, 0x39, 0xe2, 0x35, 0xb2, 0x07, 0x7a, 0x61, 0x46, 0xb9, 0x57,
	0x06, 0x8d, 0xfd, 0x96, 0x5f, 0xce, 0xcb, 0x20, 0x94, 0x49, 0x45, 0xf8, 0x52, 0x14, 0x66, 0xfc,
	0x9c, 0x7f, 0xde, 0x9c, 0x0f, 0xfb, 0xd9, 0x35, 0x5d, 0xa0, 0xe9, 0x7e, 0x42, 0xde, 0x69, 0xcc,
	0xcb, 0xc2, 0x73, 0x8d, 0xec, 0x8a, 0x66, 0x1e, 0xb6, 0xa1, 0x4b, 0x1a, 0xbb, 0xa4, 0x1e, 0xb6,
	0x8d, 0x66, 0xb7, 0x94, 0x6e, 0x40, 0x0d, 0xd2, 0x58, 0x0d, 0xbf, 0x65, 0x56, 0x11, 0x9e, 0x8a,
	0x3c, 0x90, 0x26, 0x00, 0x76, 0x47, 0x57, 0x7b, 0x85, 0xdd, 0x06, 0xb4, 0xc4, 0x5d, 0x0b, 0xe5,
	0xa2, 0x4a, 0x78, 0x2e, 0xce, 0x8e, 0xec, 0x63, 0xd7, 0x42, 0x9b, 0xc5, 0xcb, 0x3c, 0x1d, 0x02,
	0x00, 0x00, 0xff, 0xff, 0x94, 0xb9, 0x68, 0x8e, 0x29, 0x01, 0x00, 0x00,
}
