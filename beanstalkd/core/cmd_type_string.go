// Code generated by "stringer -type=CmdType --output cmd_type_string.go"; DO NOT EDIT.

package core

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Unknown-0]
	_ = x[Bury-1]
	_ = x[Delete-2]
	_ = x[Ignore-3]
	_ = x[Kick-4]
	_ = x[KickJob-5]
	_ = x[ListTubes-6]
	_ = x[ListTubesWatched-7]
	_ = x[ListTubeUsed-8]
	_ = x[PauseTube-9]
	_ = x[Peek-10]
	_ = x[PeekBuried-11]
	_ = x[PeekDelayed-12]
	_ = x[PeekReady-13]
	_ = x[Put-14]
	_ = x[Quit-15]
	_ = x[Release-16]
	_ = x[Reserve-17]
	_ = x[ReserveJob-18]
	_ = x[ReserveWithTimeout-19]
	_ = x[Stats-20]
	_ = x[StatsJob-21]
	_ = x[StatsTube-22]
	_ = x[Touch-23]
	_ = x[Use-24]
	_ = x[Watch-25]
	_ = x[Max-26]
}

const _CmdType_name = "UnknownBuryDeleteIgnoreKickKickJobListTubesListTubesWatchedListTubeUsedPauseTubePeekPeekBuriedPeekDelayedPeekReadyPutQuitReleaseReserveReserveJobReserveWithTimeoutStatsStatsJobStatsTubeTouchUseWatchMax"

var _CmdType_index = [...]uint8{0, 7, 11, 17, 23, 27, 34, 43, 59, 71, 80, 84, 94, 105, 114, 117, 121, 128, 135, 145, 163, 168, 176, 185, 190, 193, 198, 201}

func (i CmdType) String() string {
	if i < 0 || i >= CmdType(len(_CmdType_index)-1) {
		return "CmdType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _CmdType_name[_CmdType_index[i]:_CmdType_index[i+1]]
}
